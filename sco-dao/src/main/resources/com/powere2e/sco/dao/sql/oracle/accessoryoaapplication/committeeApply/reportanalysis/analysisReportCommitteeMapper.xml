<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.powere2e.sco.interfaces.dao.accessoryoaapplication.committeeApply.reportanalysis.CommitteeReportAnalysisDao">
	<resultMap type="com.powere2e.sco.model.reports.Reports" id="rp">
		<result property="applicationCode" column="applicationCode"/>
		<result property="reportsCode" column="reportsCode"/>
		<result property="reportsTypeCode" column="reportsTypeCode"/>
		<result property="reportsTypeName" column="reportsTypeName"/>
		<result property="reportsName" column="reportsName"/>
		<result property="reportsUrl" column="reportsUrl"/>
		
		<result property="created" column="created"/>
		<result property="createby" column="createby"/>
		
		<result property="recordCount" column="record_count" />
    </resultMap>
    
    <!-- 显示已关联的报表 -->
    <select id="listAnalysisReportSystem" resultMap="rp">
    	SELECT
    	<if test="page_count == null">
			ar.reports_code reportsCode,
			r.reports_type_code reportsTypeCode,t.reports_type_name reportsTypeName,
			r.reports_name reportsName,r.reports_url reportsUrl,
			(SELECT u.real_name FROM pub_user u WHERE u.user_id = r.createby) createby,
			r.created 
		</if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
    	FROM
    		 analysis_reports_a ar 
    		 INNER JOIN reports r ON ar.reports_code = r.reports_code 
    		 INNER JOIN reports_type t ON r.reports_type_code = t.reports_type_code 
    	WHERE 
    			r.createby = #{app_create_by}
			AND UPPER(ar.application_code) = UPPER(#{applicationCode}) 
			<if test="reportsTypeName != null and reportsTypeName != ''">
				AND UPPER(r.reports_type_code) LIKE UPPER(#{reportsTypeName})
			</if>
			<if test="reportsName != null and reportsName != ''">
				AND UPPER(r.reports_name) LIKE UPPER('%'||#{reportsName}||'%')
			</if>
		<if test="page_count == null">
    		<if test="app_orderby != null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby == null">
    			ORDER BY r.created DESC 
    		</if>
    	</if>	
    </select>
    
    <!-- 显示已关联的上传的报表 -->
    <select id="listAnalysisReportUpload" resultMap="rp">
    	SELECT
    	<if test="page_count == null">
    		lr.id reportsCode,
			lr.reports_name reportsName,
			lr.path reportsUrl,
			lr.reports_type reportsTypeCode,
			u.real_name createby,
			lr.created 
		</if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
    	FROM
    		analysis_reports_a ar 
			INNER JOIN local_reports lr ON ar.application_code = lr.application_code 
				AND ar.reports_code = lr.id  
			INNER JOIN reports_type t ON lr.reports_type = t.reports_type_code 
			INNER JOIN pub_user u ON lr.createby = u.user_id 
    	WHERE 
    			lr.createby = #{app_create_by}
			AND	UPPER(ar.application_code) = UPPER(#{applicationCode}) 
			<if test="reportsCodes != null and reportsCode != ''">
				AND lr.id IN (${reportsCodes}) 
			</if>
			<if test="reportsName != null and reportsName != ''">
				AND UPPER(lr.reports_name) LIKE UPPER('%'||#{reportsName}||'%')
			</if>
			<if test="createby != null and createby != ''">
				AND UPPER(u.real_name) LIKE UPPER('%'||#{createby}||'%')
			</if>
		<if test="page_count == null">
    		<if test="app_orderby != null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby == null">
    			ORDER BY lr.created DESC 
    		</if>
    	</if>
    </select>
    
    <!-- 查询上传的申购单 -->
    <select id="listAnalysisReportPurOrder" resultMap="rp">
    	SELECT
    	<if test="page_count == null">
    		sb.id reportsCode,
			sb.subscribe_bill_name reportsName,
			sb.patah reportsUrl,
			u.real_name createby,
			sb.created 
		</if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
    	FROM
    		analysis_reports_a ar 
    		INNER JOIN subscribe_bill sb ON ar.application_code = sb.application_code 
    			AND ar.reports_code = sb.id  
    		INNER JOIN pub_user u ON  u.user_id = sb.createby 
    	WHERE 
    			sb.createby = #{app_create_by}
			AND UPPER(sb.application_code) = UPPER(#{applicationCode}) 
			<if test="reportsCodes != null and reportsCode != ''">
				AND sb.id IN (${reportsCodes}) 
			</if>
			<if test="reportsName != null and reportsName != ''">
				AND UPPER(sb.subscribe_bill_name) LIKE UPPER('%'||#{reportsName}||'%')
			</if>
			<if test="createby != null and createby != ''">
				AND UPPER(u.real_name) LIKE UPPER('%'||#{createby}||'%')
			</if>
		<if test="page_count == null">
    		<if test="app_orderby != null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby == null">
    			ORDER BY sb.created DESC 
    		</if>
    	</if>
    </select>
    
    <!-- 查询已关联的成本分析报表(辅料有三个类型的成本分析表) -->
    <select id="searchMCAData" resultType="String">
    	SELECT 
    		ar.reports_code reportsCode 
    	FROM 
    		 analysis_reports_a ar 
    		 INNER JOIN reports r ON ar.reports_code = r.reports_code 
    		 INNER JOIN reports_type t ON r.reports_type_code = t.reports_type_code 
    	WHERE 
    			r.subscribe_bill
			AND UPPER(ar.application_code) = UPPER(#{applicationCode}) 
			AND UPPER(t.reports_type_code ) = UPPER(#{reportsTypeCode}) 
    </select>
    
    <!-- 通过申请单号查询关联的报表 -->
    <select id="listLinkReportByAppCode" resultMap="rp">
		(														<!-- 系统保存报表 -->
			SELECT
				ar.reports_code reportsCode,r.reports_type_code reportsTypeCode,
				r.reports_name reportsName, r.reports_url reportsUrl 
			FROM
			(
				SELECT application_code,reports_code 
				FROM analysis_reports_a
				WHERE application_code = #{applicationCode}
			) ar
			INNER JOIN 
			(
				SELECT * 
				FROM reports 
				WHERE 1=1
				<if test="reportsTypeCode != null and reportsTypeCode != ''">
					AND reports_type_code IN (${reportsTypeCode})
				</if>
			) r ON ar.reports_code = r.reports_code
		)
		UNION ALL												<!-- 上传报表 -->
		(
			SELECT
				ar.reports_code reportsCode,lr.reports_type reportsTypeCode,
				lr.reports_name reportsName,lr.path reportsUrl 
			FROM
			(
				SELECT application_code,reports_code 
				FROM analysis_reports_a 
				WHERE application_code = #{applicationCode} 
			) ar 
			INNER JOIN 
			(
				SELECT id,application_code,reports_type,reports_name,path 
				FROM local_reports 
				WHERE application_code = #{applicationCode}
				<if test="reportsTypeCode != null and reportsTypeCode != ''">
					AND reports_type IN (${reportsTypeCode})
				</if>
			) lr 
			ON ar.application_code = lr.application_code
			AND ar.reports_code = lr.id 
		) 
	</select>
    
    <!-- 验证当前选择成本分析报表是否已被其他申请单关联 -->
    <select id="validateAnalysisReportCommittee" resultType="String">
		SELECT 
			application_code 
		FROM
			analysis_reports_a t 
		WHERE t.reports_code IN
		(
			SELECT 
				t1.reports_code 
			FROM
				cost_analysis_merchandise t1,
			(
				SELECT 
					accounting_code,
					max(quoted_date) 
				FROM 
					accounting 
				WHERE 
					accounting_code IN
					(
						SELECT 
							accounting_code 
						FROM 
							cost_analysis_merchandise 
						WHERE reports_code = #{reportsCode}
					)
				GROUP BY accounting_code
			) t2 WHERE t1.accounting_code = t2.accounting_code
		) AND ROWNUM = 1
    </select>
    
    <!-- 根据申请号查询上传的文件 -->
    <select id="listUploadByApp" resultMap="rp">
    	SELECT 
    		l.id reportsCode,
    		l.reports_name reportsName,
			l.path reportsUrl 
    	FROM 
    		local_reports l
    	WHERE 
   		 	l.application_code = #{applicationCode} 
	</select>    
    
    <!-- 根据申请号查询申购单 -->
    <select id="listPurOrderByApp" resultMap="rp">
    	SELECT 
    		sb.id reportsCode,
    		sb.subscribe_bill_name reportsName,
			sb.patah reportsUrl 
    	FROM 
    		subscribe_bill sb 
    	WHERE 
   		 	sb.application_code = #{applicationCode} 
    </select>
    
    <!-- 添加关联报表 -->
    <insert id="insertLinkAnalysisReportCommittee">
		MERGE INTO analysis_reports_a T1
      	USING (
			SELECT 
				s1.c,s2.applicationCode,s2.reportsCode 
			FROM 
			 (
				 SELECT 
				 	ROWNUM c,
					ar.application_code applicationCode,
					ar.reports_code reportsCode 
	             FROM analysis_reports_a ar 
	             WHERE 
	             	ar.application_code = #{applicationCode} 
	             	AND ar.reports_code = #{reportsCode}
           	 ) s1 
            RIGHT JOIN 
            (
            	 SELECT 
					#{applicationCode} applicationCode,
					#{reportsCode} reportsCode 
	             FROM dual  
            ) s2 
           	ON s1.applicationCode = s2.applicationCode 
           		AND s1.reportsCode = s2.reportsCode 
           ) T2 
			ON (T2.c > 0)  
		WHEN MATCHED THEN															 <!-- 更新 -->
		     UPDATE SET 
		     	T1.reports_code = #{reportsCode}
          		 WHERE 
          			T1.application_code = #{applicationCode} 
             	AND T1.reports_code = #{reportsCode}
		WHEN NOT MATCHED THEN 
		      INSERT (application_code, reports_code)         <!-- 新增 -->
   			VALUES(T2.applicationCode, T2.reportsCode)
    </insert>
    
    <!-- 保存上传报表 -->
    <insert id="insertLinkAnalysisReportUpload" parameterType="hashmap" >
	    <selectKey resultType="String" keyProperty="reportsCode" order="BEFORE">
	    	SELECT S_REPORTS.NEXTVAL reportsCode FROM DUAL
	    </selectKey>
    	INSERT INTO local_reports(id,application_code,reports_type,reports_name,path,created,createby)
    		VALUES(#{reportsCode},#{applicationCode},#{reportsTypeCode},#{reportsName},#{reportsUrl},#{app_created},#{app_create_by})
    </insert>
    
    <!-- 取消关联关系 -->
    <delete id="deleteAnalysisReportLink">
    	DELETE 
    		analysis_reports_a 
    	WHERE 
    		application_code = #{applicationCode} 
    	<if test="reportsCodes != null and reportsCodes != ''">
	    	AND reports_code IN (${reportsCodes})
    	</if>
    </delete>
    
    <!-- 取消系统报表的关联  -->
    <delete id="deleteAnalysisReportUpload">
    	DELETE 
    		local_reports 
    	WHERE 
    		application_code = #{applicationCode} 
   		<if test="reportsCodes != null and reportsCodes != ''">
    		AND id IN (${reportsCodes})
    	</if>
    </delete>
    
    <!-- 根据申购单名称查询重复的数据 -->
    <select id="loadRepeatPurOrderByName" resultMap="rp">
    	SELECT 
    		sb.id reportsCode,
			sb.patah reportsUrl 
    	FROM 
    		subscribe_bill sb 
    	WHERE 
    		 	sb.application_code = #{applicationCode} 
          	AND sb.subscribe_bill_name = #{reportsName}
    </select>
    
    <!-- 保存上传的申购单 -->
    <insert id="insertAnalysisUploadPurOrder">
    	MERGE INTO subscribe_bill T1
      	USING (
			SELECT 
				s1.c,s2.applicationCode,s2.reportsCode,s2.reportsName,
				s2.reportsUrl,s2.created,s2.createby 
			FROM 
			 (
				 SELECT 
				 	ROWNUM c,
					sb.application_code applicationCode,
					sb.subscribe_bill_name reportsName 
	             FROM subscribe_bill sb 
	             WHERE 
	             	sb.application_code = #{applicationCode} 
	             	AND sb.subscribe_bill_name = #{reportsName}
           	 ) s1 
            RIGHT JOIN 
            (
            	 SELECT 
					#{applicationCode} applicationCode,
					#{reportsCode} reportsCode,
					#{reportsName} reportsName,
					#{reportsUrl} reportsUrl,
					#{app_created} created,
					#{app_create_by} createby
	             FROM dual  
            ) s2 
           	ON s1.applicationCode = s2.applicationCode 
           		AND s1.reportsName = s2.reportsName 
           ) T2 
			ON (T2.c > 0)  
		WHEN MATCHED THEN															 <!-- 更新 -->
		     UPDATE SET 
		     	T1.patah = T2.reportsUrl,
		     	T1.created = T2.created,
		     	T1.createby = T2.createby,
		     	T1.updated = T2.created,
		     	T1.updateby = T2.createby 
          		 WHERE 
          			T1.application_code = #{applicationCode} 
             	AND T1.subscribe_bill_name = #{reportsName}
		WHEN NOT MATCHED THEN 
		      INSERT (id,application_code,subscribe_bill_name,patah,created,createby)         <!-- 新增 -->
   			VALUES(T2.reportsCode,T2.applicationCode, T2.reportsName,T2.reportsUrl,T2.created,T2.createby)
    </insert>
    
    <!-- 删除申购单 -->
    <delete id="deleteAnalysisReportPurOrder">
    	DELETE 
    		subscribe_bill 
    	WHERE 
    		application_code = #{applicationCode} 
    	<if test="reportsCodes != null and reportsCodes != ''">
    		AND id IN (${reportsCodes}) 
    	</if>
    </delete>
    
</mapper>