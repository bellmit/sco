<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.powere2e.sco.interfaces.dao.accessoryintentioncostanalysis.totalcostanalysis.TotalcostanalysisDao">
	<resultMap type="com.powere2e.sco.model.accessoryintentioncostanalysis.totalcostanalysis.Totalcostanalysis" id="TotalcostanalysisMap">
		<result property="applicationCode" column="applicationCode"/>
		<result property="applicationCreateby" column="applicationCreateby"/>
		<result property="intentionCode" column="intentionCode"/>
		<result property="intentionName" column="intentionName"/>
		<result property="supplierCode" column="supplierCode"/>
		<result property="supplierName" column="supplierName"/>
		<result property="intentionSupplierCode" column="intentionSupplierCode"/>
		<result property="intentionSupplierName" column="intentionSupplierName"/>
		<result property="applicationStatus" column="applicationStatus"/>
		<result property="centreTypeCode" column="centreTypeCode"/>
		<result property="smallTypeCode" column="smallTypeCode"/>
		<result property="detailTypeCode" column="detailTypeCode"/>
		<result property="fineTypeCodes" column="fineTypeCodes"/>
		<result property="centreTypeName" column="centreTypeName"/>
		<result property="smallTypeName" column="smallTypeName"/>
		<result property="detailTypeName" column="detailTypeName"/>
		<result property="fineTypeName" column="fineTypeName"/>
		<result property="supplierCount" column="supplierCount"/>
		<result property="line" column="line"/>
		<result property="enquiryCode" column="enquiryCode"/>
		<result property="enquiryName" column="enquiryName"/>
		<result property="enquiryCreated" column="enquiryCreated"/>
		<result property="enquiryCreateby" column="enquiryCreateby"/>
		<result property="quotedCode" column="quotedCode"/>
		<result property="quotedDate" column="quotedDate"/>
		<result property="quotedCreated" column="quotedCreated"/>
		<result property="intentionCreated" column="intentionCreated"/>
		<result property="accessorySapCode" column="accessorySapCode"/>
		<result property="oaApplicationCode" column="oaApplicationCode"/>
		<result property="oaApplicationUrl" column="oaApplicationUrl"/>
		<result property="created" column="created"/>
		<result property="createby" column="createby"/>
		<result property="updated" column="updated"/>
		<result property="updateby" column="updateby"/>
		<result property="createUserName" column="createUserName"/>
		<result property="updateUserName" column="updateUserName"/>
		<result property="recordCount" column="record_count" />
    </resultMap>
    
    <resultMap type="com.powere2e.sco.model.accessoryintentioncostanalysis.totalcostanalysis.QuotedForm" id="QuotedFormMap">
		<result property="lastQuotedRank" column="lastQuotedRank"/>
		<result property="supplierCode" column="supplierCode"/>
		<result property="lastProductionCycle" column="lastProductionCycle"/>
    </resultMap>
    <resultMap type="com.powere2e.sco.model.accessoryintentioncostanalysis.totalcostanalysis.QuotedDetailForm" id="QuotedDetailFormMap">
		<result property="quotedDate" column="quotedDate"/>
		<result property="unitPrice" column="unitPrice"/>
		<result property="quotedTotal" column="quotedTotal"/>
    </resultMap>
     <!-- 查询采购委员会竞价单OA申请列表(可分页)-->
    <select id="listTotalcostanalysisIntentionApplication" resultMap="TotalcostanalysisMap">
    	SELECT  
    	<if test="page_count == null">
       		 t.enquiry_code            enquiryCode,
       		 e.enquiry_Name enquiryName,
 t.intention_code          intentionCode,
 t.intention_supplier_code intentionSupplierCode,
 m.intention_supplier_name intentionSupplierName,
 n.supplier_name           supplierName,
 a.INTENTION_NAME          intentionName,
 (select count(1) from (select aqe.INTENTION_SUPPLIER_CODE, aqe.INTENTION_CODE from ACCESSORY_QUOTED_ELECTRONIC aqe
 inner join INTENTION_SUPPLIER_ACCESSORY isa on aqe.intention_code=isa.intention_code and (aqe.intention_supplier_code=isa.intention_supplier_code )
  group by aqe.INTENTION_SUPPLIER_CODE,aqe.INTENTION_CODE) s where s.INTENTION_CODE=t.INTENTION_CODE) supplierCount,
 c.centre_type_name centreTypeName,
 s.small_type_name  smallTypeName,
 d.detail_type_name detailTypeName,
 f.fine_type_name   fineTypeName,
 e.created          enquiryCreated,
 (select u.real_name from pub_user u where u.user_id=e.createby) as enquiryCreateby,
 z.line
	   </if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
      		FROM (select enquiry_code,
               intention_code,
               intention_supplier_code
          from accessory_quoted_electronic t1
         group by enquiry_code,
                  intention_code,
                  intention_supplier_code
                ) t
   inner join INTENTION_SUPPLIER_ACCESSORY isa1 on t.intention_code=isa1.intention_code and (t.intention_supplier_code=isa1.intention_supplier_code)
  left join ACCESSORY_INTENTION_SUPPLIER m
    on t.intention_supplier_code = m.intention_supplier_code
  left join SUPPLIER n
    on t.intention_supplier_code = n.SUPPLIER_CODE
  left join ACCESSORY_INTENTION a
    on t.intention_code = a.intention_code
  left join ACCESSORY_ENQUIRY e
    on t.enquiry_code = e.enquiry_code

  left join MERCHANDISE_CENTRE_TYPE c
    on a.centre_type_code = c.centre_type_code
  left join MERCHANDISE_SMALL_TYPE s
    on a.small_type_code = s.small_type_code
  left join MERCHANDISE_DETAIL_TYPE d
    on a.detail_type_code = d.detail_type_code
  left join ACCESSORY_FINE_TYPE f
    on a.fine_type_code = f.fine_type_code
  left join

 (select k.enquiry_code,
         k.unit_price,
        
         k.supplier_code,
         rank() over(partition by k.enquiry_code order by k.unit_price) line
          from 
          
          ( select w1.enquiry_code,w1.unit_price,w1.quoted_code,w1.supplier_code  from ACCESSORY_QUOTED_TOTAL W1
            inner join(
            
            SELECT * FROM ACCESSORY_QUOTED_ELECTRONIC W WHERE NOT EXISTS(SELECT 1 FROM ACCESSORY_QUOTED_ELECTRONIC  WHERE
 W.enquiry_code=enquiry_code AND W.INTENTION_SUPPLIER_CODE=INTENTION_SUPPLIER_CODE AND W.quoted_date &lt; quoted_date ) ) W2 on W1.quoted_code= W2.quoted_code
 inner join INTENTION_SUPPLIER_ACCESSORY W3 on W3.INTENTION_SUPPLIER_CODE=W1.SUPPLIER_CODE
 )k
  
   inner join (select enquiry_code, count(*) num
                from ACCESSORY_ENQUIRY_QUOTED_COUNT
               group by enquiry_code) k1
      on k.enquiry_code = k1.enquiry_code
     and k1.num = 1
   group by k.enquiry_code, k.unit_price,  k.supplier_code) z
    on t.enquiry_code = z.enquiry_code
   and (t.intention_supplier_code = z.supplier_code )
      		
    	<where>
    		1=1
			 <if test= "applicationCode != null and applicationCode!=''">
			AND UPPER(p.application_code) LIKE UPPER('%'||#{applicationCode}||'%')
			</if>
			<if test= "applicationStatus != null and applicationStatus!=''">
			AND UPPER(p.application_status) LIKE UPPER('%'||#{applicationStatus}||'%')
			</if>
	    	<if test= "enquiryCode != null and enquiryCode!=''">
			AND UPPER(t.enquiry_code) LIKE UPPER('%'||#{enquiryCode}||'%')
			</if>
	    	<if test= "intentionCode != null and intentionCode!=''">
			AND UPPER(t.intention_code) LIKE UPPER('%'||#{intentionCode}||'%')
			</if>
			<if test= "intentionName != null and intentionName!=''">
			AND UPPER(a.intention_name) LIKE UPPER('%'||#{intentionName}||'%')
			</if>
	    	<if test= "intentionSupplierCode != null and intentionSupplierCode!=''">
			AND ( UPPER(m.intention_supplier_code) LIKE UPPER('%'||#{intentionSupplierCode}||'%')
			</if>
	    	<if test= "supplierCode != null and supplierCode!=''">
			or UPPER(n.supplier_code) LIKE UPPER('%'||#{supplierCode}||'%') )
			</if>
	    	<if test= "intentionSupplierName != null and intentionSupplierName!=''">
			AND ( UPPER(m.intention_supplier_name) LIKE UPPER('%'||#{intentionSupplierName}||'%')
			</if>
	    	<if test= "supplierName != null and supplierName!=''">
			or UPPER(n.supplier_name) LIKE UPPER('%'||#{supplierName}||'%')   )
			</if>
			<if test= "centreTypeCode != null and centreTypeCode!=''">
			AND UPPER(a.centre_type_code) LIKE UPPER('%'||#{centreTypeCode}||'%')
			</if>
	    	<if test= "smallTypeCode != null and smallTypeCode!=''">
			AND UPPER(a.small_type_code) LIKE UPPER('%'||#{smallTypeCode}||'%')
			</if>
	    	<if test= "detailTypeCode != null and detailTypeCode!=''">
			AND UPPER(a.detail_type_code) LIKE UPPER('%'||#{detailTypeCode}||'%')
			</if>
	    	<if test= "fineTypeCodes != null and fineTypeCodes!=''">
			AND UPPER(a.fine_type_code) LIKE UPPER('%'||#{fineTypeCodes}||'%')
			</if>
	    	<if test= "quotedDate != null and quotedDate!=''">
			AND	convert(varchar,t.quoted_date,120) LIKE (#{quotedDate})
			</if>
	    	<if test= "enquiryCreated != null ">
			AND	e.created>=#{enquiryCreated}
			</if>
			<if test= "enquiryCreatedEnd != null ">
			AND	e.created<![CDATA[<]]> (#{enquiryCreatedEnd}+1)
			</if>
			<if test= "intentionCreated != null ">
			AND	a.created>=#{intentionCreated}
			</if>
			<if test= "intentionCreatedEnd != null ">
			AND	a.created<![CDATA[<]]> (#{intentionCreatedEnd}+1)
			</if>
	    	
    	</where>
    	<if test="page_count == null">
    		<if test="app_orderby !=null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby ==null">
    			ORDER BY t.intention_code desc,t.enquiry_code desc
    		</if>
    	</if>
    </select>
       <!-- 查询最后一次报价申请列表(可分页)-->
    <select id="listQuotedForm" resultMap="QuotedFormMap">
    	SELECT  
    	<if test="page_count == null">
         k.production_cycle lastProductionCycle,
         k.supplier_code supplierCode,
         rank() over(partition by k.enquiry_code,k.order_count order by k.unit_price) lastQuotedRank
	   </if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
          
            from (select k1.* from ACCESSORY_QUOTED_TOTAL K1
            inner join( SELECT * FROM ACCESSORY_QUOTED_ELECTRONIC W WHERE NOT EXISTS(SELECT 1 FROM 

ACCESSORY_QUOTED_ELECTRONIC  WHERE
 W.enquiry_code=enquiry_code AND W.INTENTION_SUPPLIER_CODE=INTENTION_SUPPLIER_CODE AND W.quoted_date &lt; quoted_date )) k2 

on k1.quoted_code=k2.quoted_code) k
            inner join accessory_quoted_electronic k1 on k.quoted_code=k1.quoted_code
    	<where>
    		1=1
			<if test= "enquiryCount != null and enquiryCount!=''">
			AND k.order_count=#{enquiryCount}
			</if>
	    	<if test= "enquiryCode != null and enquiryCode!=''">
			AND k.enquiry_code=#{enquiryCode}
			</if>
			<if test= "supplierCode != null and supplierCode!=''">
			AND k.supplier_code=#{supplierCode}
			</if>
    	</where>
    	<if test="page_count == null">
    		<if test="app_orderby !=null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby ==null">
    			ORDER BY k1.quoted_date 
    		</if>
    	</if>
    </select>
    <!-- 查询报价申请列表(可分页)-->
    <select id="listQuotedDetailForm" resultMap="QuotedDetailFormMap">
    	SELECT  
    	<if test="page_count == null">
         k.UNIT_PRICE unitPrice,
         t.quoted_date quotedDate,
        ( k.unit_price*1) quotedTotal
	   </if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
          
            from ACCESSORY_QUOTED_TOTAL K
          left join accessory_quoted_electronic t on k.quoted_code=t.quoted_code
      		
    	<where>
    		1=1
			<if test= "enquiryCount != null and enquiryCount!=''">
			AND k.order_count=#{enquiryCount}
			</if>
	    	<if test= "enquiryCode != null and enquiryCode!=''">
			AND k.enquiry_code=#{enquiryCode}
			</if>
			<if test= "supplierCode != null and supplierCode!=''">
			AND k.supplier_code=#{supplierCode}
			</if>
    	</where>
    	<if test="page_count == null">
    		<if test="app_orderby !=null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby ==null">
    			ORDER BY t.quoted_date 
    		</if>
    	</if>
    </select>
     <!-- 根据主键查询某个辅料打样(可分页)-->
    <select id="loadTotalcostanalysisIntentionApplication" resultMap="TotalcostanalysisMap">
    	SELECT  
    	<if test="page_count == null">
       		 t.enquiry_code            enquiryCode,
 t.intention_code          intentionCode,
 t.intention_supplier_code intentionSupplierCode,
 m.intention_supplier_name intentionSupplierName,
 n.supplier_name           supplierName,
 a.INTENTION_NAME          intentionName,
 (select count(1) from (select aqe.INTENTION_SUPPLIER_CODE, aqe.INTENTION_CODE from ACCESSORY_QUOTED_ELECTRONIC aqe
 inner join INTENTION_SUPPLIER_ACCESSORY isa on aqe.intention_code=isa.intention_code and (aqe.intention_supplier_code=isa.intention_supplier_code )
  group by aqe.INTENTION_SUPPLIER_CODE,aqe.INTENTION_CODE) s where s.INTENTION_CODE=t.INTENTION_CODE) supplierCount,
 c.centre_type_name centreTypeName,
 s.small_type_name  smallTypeName,
 d.detail_type_name detailTypeName,
 f.fine_type_name   fineTypeName,
 e.created          enquiryCreated,
 e.createby         enquiryCreateby,
 z.line
	   </if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
      		FROM (select enquiry_code,
               intention_code,
               intention_supplier_code
              
          from accessory_quoted_electronic t1
         group by enquiry_code,
                  intention_code,
                  intention_supplier_code
                 ) t
   inner join INTENTION_SUPPLIER_ACCESSORY isa1 on t.intention_code=isa1.intention_code and (t.intention_supplier_code=isa1.intention_supplier_code )
  left join ACCESSORY_INTENTION_SUPPLIER m
    on t.intention_supplier_code = m.intention_supplier_code
  left join SUPPLIER n
    on t.intention_supplier_code = n.SUPPLIER_CODE
  left join ACCESSORY_INTENTION a
    on t.intention_code = a.intention_code
  left join ACCESSORY_ENQUIRY e
    on t.enquiry_code = e.enquiry_code

  left join MERCHANDISE_CENTRE_TYPE c
    on a.centre_type_code = c.centre_type_code
  left join MERCHANDISE_SMALL_TYPE s
    on a.small_type_code = s.small_type_code
  left join MERCHANDISE_DETAIL_TYPE d
    on a.detail_type_code = d.detail_type_code
  left join ACCESSORY_FINE_TYPE f
    on a.fine_type_code = f.fine_type_code
  left join

 (select k.enquiry_code,
         k.unit_price,
         
         k.supplier_code,
         rank() over(partition by k.enquiry_code order by k.unit_price) line
    from (select *
          
            from ACCESSORY_QUOTED_TOTAL W
          
           where quoted_code =
                 (select MAX(quoted_code)
                    from ACCESSORY_QUOTED_TOTAL
                   where enquiry_code = W.enquiry_code
                     AND supplier_code = W.supplier_code)) k
  
   inner join (select enquiry_code, count(*) num
                from ACCESSORY_ENQUIRY_QUOTED_COUNT
               group by enquiry_code) k1
      on k.enquiry_code = k1.enquiry_code
     and k1.num = 1
   group by k.enquiry_code, k.unit_price,  k.supplier_code) z
    on t.enquiry_code = z.enquiry_code
   and (t.intention_supplier_code = z.supplier_code )
    	<where>
    		1=1
	    	<if test= "quotedCode != null and quotedCode!=''">
			AND  t.quoted_code = #{quotedCode}
			</if>
    	</where>
    	
    </select>
    <!-- 修改关联表 -->
    <update id="updateIntentionSupplierAccessory" parameterType="hashmap">
		UPDATE	
				intention_supplier_accessory	
		   SET	
		   		merchandise_code=#{accessorySapCode}
		   		<if test= "supplierSapCode != null and supplierSapCode!=''">
		   		,
		   		supplier_code=#{supplierSapCode}
		   		</if>	   		
		 WHERE	
		 		intention_code=#{intentionCode}
    </update>
</mapper>