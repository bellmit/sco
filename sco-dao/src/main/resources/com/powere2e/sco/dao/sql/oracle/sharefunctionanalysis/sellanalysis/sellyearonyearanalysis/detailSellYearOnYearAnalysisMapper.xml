<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.powere2e.sco.interfaces.dao.sharefunctionanalysis.sellanalysis.sellyearonyearanalysis.DetailSellYearOnYearDao">
     <resultMap type="com.powere2e.sco.model.sharefunctionanalysis.sellanalysis.sellyearonyearanalysis.SellYearOnYear" id="yearOnYearMap">
		<result property="merchandiseCode" column="merchandiseCode" />
		<result property="merchandiseName" column="merchandiseName" />
		<result property="supplierCode" column="supplierCode" />
		<result property="supplierName" column="supplierName" />
		<result property="centreTypeCode" column="centreTypeCode"/>
		<result property="smallTypeCode" column="smallTypeCode"/>
		<result property="detailTypeCode" column="detailTypeCode"/>
		<result property="fineTypeCode" column="fineTypeCode"/>
		<result property="centreTypeName" column="centreTypeName"/>
		<result property="smallTypeName" column="smallTypeName"/>
		<result property="detailTypeName" column="detailTypeName"/>
		<result property="fineTypeName" column="fineTypeName"/>
		<result property="recordCount" column="record_count" />
    </resultMap>      	
    
    <resultMap type="com.powere2e.sco.model.sharefunctionanalysis.sellanalysis.sellyearonyearanalysis.SellYearOnYearAnalysis" id="detailAnalysisMap">
		<result property="detailTypeCode" column="detailTypeCode"/>
		<result property="sellRegion" column="sellRegion"/>
		<result property="directJoin" column="directJoin"/>
		<result property="sellMonth" column="sellMonth"/>
		<result property="sellQuantity" column="sellQuantity"/>
		<result property="sellTotalPrice" column="sellTotalPrice"/>
		<result property="sellProfit" column="sellProfit"/>
		<result property="psdSellQuantity" column="psdSellQuantity"/>
		<result property="psdSellTotalPrice" column="psdSellTotalPrice"/>
		<result property="psdSellProfit" column="psdSellProfit"/>
		<result property="sellQuantityChange" column="sellQuantityChange"/>
		<result property="sellTotalPriceChange" column="sellTotalPriceChange"/>
		<result property="sellProfitChange" column="sellProfitChange"/>
		<result property="psdSellQuantityChange" column="psdSellQuantityChange"/>
		<result property="psdSellTotalPriceChange" column="psdSellTotalPriceChange"/>
		<result property="psdSellProfitChange" column="psdSellProfitChange"/>
		<!--去年同比信息  -->
		<result property="lastSellMonth" column="lastSellMonth"/>
		<result property="lastSellQuantity" column="lastSellQuantity"/>
		<result property="lastSellQuantityChange" column="lastSellQuantityChange"/>
		<result property="lastSellTotalPrice" column="lastSellTotalPrice"/>
		<result property="lastSellTotalPriceChange" column="lastSellTotalPriceChange"/>
		<result property="lastSellProfit" column="lastSellProfit"/>
		<result property="lastSellProfitChange" column="lastSellProfitChange"/>
		<result property="lastPsdSellQuantity" column="lastPsdSellQuantity"/>
		<result property="lastPsdSellQuantityChange" column="lastPsdSellQuantityChange"/>
		<result property="lastPsdSellTotalPrice" column="lastPsdSellTotalPrice"/>
		<result property="lastPsdSellTotalPriceChange" column="lastPsdSellTotalPriceChange"/>
		<result property="lastPsdSellProfit" column="lastPsdSellProfit"/>
		<result property="lastPsdSellProfitChange" column="lastPsdSellProfitChange"/>
		<!--前年-->
		<result property="beforeSellMonth" column="beforeSellMonth"/>
		<result property="beforeSellQuantity" column="beforeSellQuantity"/>
		<result property="beforeSellQuantityChange" column="beforeSellQuantityChange"/>
		<result property="beforeSellTotalPrice" column="beforeSellTotalPrice"/>
		<result property="beforeSellTotalPriceChange" column="beforeSellTotalPriceChange"/>
		<result property="beforeSellProfit" column="beforeSellProfit"/>
		<result property="beforeSellProfitChange" column="beforeSellProfitChange"/>
		<result property="beforePsdSellQuantity" column="beforePsdSellQuantity"/>
		<result property="beforePsdSellQuantityChange" column="beforePsdSellQuantityChange"/>
		<result property="beforePsdSellTotalPrice" column="beforePsdSellTotalPrice"/>
		<result property="beforePsdSellTotalPriceChange" column="beforePsdSellTotalPriceChange"/>
		<result property="beforePsdSellProfit" column="beforePsdSellProfit"/>
		<result property="beforePsdSellProfitChange" column="beforePsdSellProfitChange"/>
		
		<result property="createUserName" column="createUserName"/>
		<result property="updateUserName" column="updateUserName"/>
    </resultMap>
     
     <!-- 查询明细类信息-->
     <select id="listDetailTypeInfo" resultMap="yearOnYearMap">
     	SELECT 	
     		<if test="page_count == null">
     		  d1.*
     		</if>
	    	<if test="page_count != null">
	       		count(1) AS record_count
	    	</if>
	    FROM	
     	(SELECT 
     			t1.detail_type_code detailTypeCode,
       			count(t1.merchandise_code) detailTypeSku,
       			(SELECT a1.detail_type_name FROM merchandise_detail_type a1 WHERE a1.detail_type_code = t1.detail_type_code) detailTypeName
       			
  		FROM	 merchandise t1
  		WHERE	 EXISTS
  				 (SELECT t2.detail_type_code FROM merchandise t2
  				  WHERE	 t2.detail_type_code=t1.detail_type_code
				  AND 
					     (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       (t2.merchandise_code = #{item.merchandiseCode}	 
					     AND
					       	t2.supplier_code = #{item.supplierCode})
					      </foreach> 	
					     ) 
				 )
				<if test= "rationed != null and rationed !='' and rationed=='gjz' ">
					AND t1.net_weight =1
				</if>
				<if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					AND t1.net_weight !=1
				</if>			 		     
	 	GROUP BY 
	 			t1.detail_type_code) d1
     </select>
     
     <!-- 查询明细类销售同比-->
     <select id="queryDetailSellYearOnYear" resultMap="detailAnalysisMap">
	     SELECT
		     <!--第一年-->
		     sellMonth,
		     ROUND(sellQuantity,2) sellQuantity,
	     	 ROUND(sellTotalPrice,2) sellTotalPrice,
	     	 ROUND(sellProfit,2) sellProfit,
		     
		     ROUND(sellQuantityChange,2) sellQuantityChange,
		     ROUND(sellTotalPriceChange,2) sellTotalPriceChange,
		     ROUND(sellProfitChange,2) sellProfitChange,
		     
		     ROUND(psdSellQuantity,2) psdSellQuantity,
		     ROUND(psdSellTotalPrice,2) psdSellTotalPrice,
		     ROUND(psdSellProfit,2) psdSellProfit,
		     
		     ROUND(DECODE(lastPsdSellQuantity,NULL,NULL,0,0,DECODE(psdSellQuantity,NULL,NULL,(psdSellQuantity-lastPsdSellQuantity)/lastPsdSellQuantity))*100,2) psdSellQuantityChange,
		     ROUND(DECODE(lastPsdSellTotalPrice,NULL,NULL,0,0,DECODE(psdSellTotalPrice,NULL,NULL,(psdSellTotalPrice-lastPsdSellTotalPrice)/lastPsdSellTotalPrice))*100,2) psdSellTotalPriceChange,
		     ROUND(DECODE(lastPsdSellProfit,NULL,NULL,0,0,DECODE(psdSellProfit,NULL,NULL,(psdSellProfit-lastPsdSellProfit)/lastPsdSellProfit))*100,2) psdSellProfitChange,
		     
		     <!--第二年-->
		     lastSellMonth,
		     ROUND(lastSellQuantity,2) lastSellQuantity,
	     	 ROUND(lastSellTotalPrice,2) lastSellTotalPrice,
	     	 ROUND(lastSellProfit,2) lastSellProfit,
		     
		     ROUND(lastSellQuantityChange,2) lastSellQuantityChange,
		     ROUND(lastSellTotalPriceChange,2) lastSellTotalPriceChange,
		     ROUND(lastSellProfitChange,2) lastSellProfitChange,
		     
		     ROUND(lastPsdSellQuantity,2) lastPsdSellQuantity,
		     ROUND(lastPsdSellTotalPrice,2) lastPsdSellTotalPrice,
		     ROUND(lastPsdSellProfit,2) lastPsdSellProfit,
		     
		     ROUND(DECODE(beforePsdSellQuantity,NULL,NULL,0,0,DECODE(lastPsdSellQuantity,NULL,NULL,(lastPsdSellQuantity-beforePsdSellQuantity)/beforePsdSellQuantity))*100,2) lastPsdSellQuantityChange,
		     ROUND(DECODE(beforePsdSellTotalPrice,NULL,NULL,0,0,DECODE(lastPsdSellTotalPrice,NULL,NULL,(lastPsdSellTotalPrice-beforePsdSellTotalPrice)/beforePsdSellTotalPrice))*100,2) lastPsdSellTotalPriceChange,
		     ROUND(DECODE(beforePsdSellProfit,NULL,NULL,0,0,DECODE(lastPsdSellProfit,NULL,NULL,(lastPsdSellProfit-beforePsdSellProfit)/beforePsdSellProfit))*100,2) lastPsdSellProfitChange
		     
		     <if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
	    	 ,
	    	 <!--第三年-->
	    	 beforeSellMonth,
	       	 ROUND(beforeSellQuantity,2) beforeSellQuantity,
	       	 ROUND(beforeSellTotalPrice,2) beforeSellTotalPrice,
	       	 ROUND(beforeSellProfit,2) beforeSellProfit,
	    	 
	    	 ROUND(beforeSellQuantityChange,2) beforeSellQuantityChange,
	    	 ROUND(beforeSellTotalPriceChange,2) beforeSellTotalPriceChange,
		     ROUND(beforeSellProfitChange,2) beforeSellProfitChange,
		     
		     ROUND(beforePsdSellQuantity,2) beforePsdSellQuantity,
		     ROUND(beforePsdSellTotalPrice,2) beforePsdSellTotalPrice,
		     ROUND(beforePsdSellProfit,2) beforePsdSellProfit,
		     
		     ROUND(DECODE(fourthPsdSellQuantity,NULL,NULL,0,0,DECODE(beforePsdSellQuantity,NULL,NULL,(beforePsdSellQuantity-fourthPsdSellQuantity)/fourthPsdSellQuantity))*100,2) beforePsdSellQuantityChange,
		     ROUND(DECODE(fourthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(beforePsdSellTotalPrice,NULL,NULL,(beforePsdSellTotalPrice-fourthPsdSellTotalPrice)/fourthPsdSellTotalPrice))*100,2) beforePsdSellTotalPriceChange,
		     ROUND(DECODE(fourthPsdSellProfit,NULL,NULL,0,0,DECODE(beforePsdSellProfit,NULL,NULL,(beforePsdSellProfit-fourthPsdSellProfit)/fourthPsdSellProfit))*100,2) beforePsdSellProfitChange
		     </if>
		     <if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
		     ,
		     <!--第三年-->
		     beforeSellMonth,
	       	 ROUND(beforeSellQuantity,2) beforeSellQuantity,
	       	 ROUND(beforeSellTotalPrice,2) beforeSellTotalPrice,
	       	 ROUND(beforeSellProfit,2) beforeSellProfit,
		     
		     ROUND(beforeSellQuantityChange,2) beforeSellQuantityChange,
	    	 ROUND(beforeSellTotalPriceChange,2) beforeSellTotalPriceChange,
		     ROUND(beforeSellProfitChange,2) beforeSellProfitChange,
		     
		     ROUND(beforePsdSellQuantity,2) beforePsdSellQuantity,
		     ROUND(beforePsdSellTotalPrice,2) beforePsdSellTotalPrice,
		     ROUND(beforePsdSellProfit,2) beforePsdSellProfit,
		     
		     ROUND(DECODE(fourthPsdSellQuantity,NULL,NULL,0,0,DECODE(beforePsdSellQuantity,NULL,NULL,(beforePsdSellQuantity-fourthPsdSellQuantity)/fourthPsdSellQuantity))*100,2) beforePsdSellQuantityChange,
		     ROUND(DECODE(fourthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(beforePsdSellTotalPrice,NULL,NULL,(beforePsdSellTotalPrice-fourthPsdSellTotalPrice)/fourthPsdSellTotalPrice))*100,2) beforePsdSellTotalPriceChange,
		     ROUND(DECODE(fourthPsdSellProfit,NULL,NULL,0,0,DECODE(beforePsdSellProfit,NULL,NULL,(beforePsdSellProfit-fourthPsdSellProfit)/fourthPsdSellProfit))*100,2) beforePsdSellProfitChange,
		     
		     <!--第四年-->
		     fourthSellMonth,
		     ROUND(fourthSellQuantity,2) fourthSellQuantity,
		     ROUND(fourthSellTotalPrice,2) fourthSellTotalPrice,
		     ROUND(fourthSellProfit,2) fourthSellProfit,
		     
		     ROUND(fourthSellQuantityChange,2) fourthSellQuantityChange,
		     ROUND(fourthSellTotalPriceChange,2) fourthSellTotalPriceChange,
		     ROUND(fourthSellProfitChange,2) fourthSellProfitChange,
		     
		     ROUND(fourthPsdSellQuantity,2) fourthPsdSellQuantity,
		     ROUND(fourthPsdSellTotalPrice,2) fourthPsdSellTotalPrice,
		     ROUND(fourthPsdSellProfit,2) fourthPsdSellProfit,
		     
		     ROUND(DECODE(fifthPsdSellQuantity,NULL,NULL,0,0,DECODE(fourthPsdSellQuantity,NULL,NULL,(fourthPsdSellQuantity-fifthPsdSellQuantity)/fifthPsdSellQuantity))*100,2) fourthPsdSellQuantityChange,
		     ROUND(DECODE(fifthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(fourthPsdSellTotalPrice,NULL,NULL,(fourthPsdSellTotalPrice-fifthPsdSellTotalPrice)/fifthPsdSellTotalPrice))*100,2) fourthPsdSellTotalPriceChange,
		     ROUND(DECODE(fifthPsdSellProfit,NULL,NULL,0,0,DECODE(fourthPsdSellProfit,NULL,NULL,(fourthPsdSellProfit-fifthPsdSellProfit)/fifthPsdSellProfit))*100,2) fourthPsdSellProfitChange     
		     </if>
	     FROM
	     (	
	     	SELECT  
	     		   k1.sellMonth,
	       	       d1.sellQuantity,
	     		   d1.sellTotalPrice,
	     		   d1.sellProfit,
	     		   
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellQuantity/d1.sellStoreQuantity) psdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellTotalPrice/d1.sellStoreQuantity) psdSellTotalPrice,
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellProfit/d1.sellStoreQuantity) psdSellProfit,
	     		   
	     		   DECODE(d2.lastSellQuantity,NULL,NULL,0,0,DECODE(d1.sellQuantity,NULL,NULL,(d1.sellQuantity-d2.lastSellQuantity)/d2.lastSellQuantity))*100 sellQuantityChange,
		           DECODE(d2.lastSellTotalPrice,NULL,NULL,0,0,DECODE(d1.sellTotalPrice,NULL,NULL,(d1.sellTotalPrice-d2.lastSellTotalPrice)/d2.lastSellTotalPrice))*100 sellTotalPriceChange,
		           DECODE(d2.lastSellProfit,NULL,NULL,0,0,DECODE(d1.sellProfit,NULL,NULL,(d1.sellProfit-d2.lastSellProfit)/d2.lastSellProfit))*100 sellProfitChange,
		           
		           <!--第二年-->
		           d2.lastSellMonth,
		           d2.lastSellQuantity,
	     		   d2.lastSellTotalPrice,
	     		   d2.lastSellProfit,
	     		   
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellQuantity/d2.lastSellStoreQuantity) lastPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellTotalPrice/d2.lastSellStoreQuantity) lastPsdSellTotalPrice,
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellProfit/d2.lastSellStoreQuantity) lastPsdSellProfit,
	     		   
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellQuantity/d3.beforeSellStoreQuantity) beforePsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellTotalPrice/d3.beforeSellStoreQuantity) beforePsdSellTotalPrice,
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellProfit/d3.beforeSellStoreQuantity) beforePsdSellProfit,
	     		   
	     		   DECODE(d3.beforeSellQuantity,NULL,NULL,0,0,DECODE(d2.lastSellQuantity,NULL,NULL,(d2.lastSellQuantity-d3.beforeSellQuantity)/d3.beforeSellQuantity))*100 lastSellQuantityChange,
	               DECODE(d3.beforeSellTotalPrice,NULL,NULL,0,0,DECODE(d2.lastSellTotalPrice,NULL,NULL,(d2.lastSellTotalPrice-d3.beforeSellTotalPrice)/d3.beforeSellTotalPrice))*100 lastSellTotalPriceChange,
		           DECODE(d3.beforeSellProfit,NULL,NULL,0,0,DECODE(d2.lastSellProfit,NULL,NULL,(d2.lastSellProfit-d3.beforeSellProfit)/d3.beforeSellProfit))*100 lastSellProfitChange
	       	    <if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
	       	       <!--第三年-->
	       	       ,
	       	       d3.beforeSellMonth,
	       	       d3.beforeSellQuantity,
	       	       d3.beforeSellTotalPrice,
	       	       d3.beforeSellProfit,
	       	       
	       	       DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellQuantity/d4.fourthSellStoreQuantity) fourthPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellTotalPrice/d4.fourthSellStoreQuantity) fourthPsdSellTotalPrice,
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellProfit/d4.fourthSellStoreQuantity) fourthPsdSellProfit,
	       	       
	       	       DECODE(d4.fourthSellQuantity,NULL,NULL,0,0,DECODE(d3.beforeSellQuantity,NULL,NULL,(d3.beforeSellQuantity-d4.fourthSellQuantity)/d4.fourthSellQuantity))*100 beforeSellQuantityChange,
	               DECODE(d4.fourthSellTotalPrice,NULL,NULL,0,0,DECODE(d3.beforeSellTotalPrice,NULL,NULL,(d3.beforeSellTotalPrice-d4.fourthSellTotalPrice)/d4.fourthSellTotalPrice))*100 beforeSellTotalPriceChange,
		           DECODE(d4.fourthSellProfit,NULL,NULL,0,0,DECODE(d3.beforeSellProfit,NULL,NULL,(d3.beforeSellProfit-d4.fourthSellProfit)/d4.fourthSellProfit))*100 beforeSellProfitChange
	       	    </if>
	       	     <if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
	       	       ,
	               d3.beforeSellMonth,
	       	       d3.beforeSellQuantity,
	       	       d3.beforeSellTotalPrice,
	       	       d3.beforeSellProfit,
	       	       
	       	       DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellQuantity/d4.fourthSellStoreQuantity) fourthPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellTotalPrice/d4.fourthSellStoreQuantity) fourthPsdSellTotalPrice,
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellProfit/d4.fourthSellStoreQuantity) fourthPsdSellProfit,
	       	       
	       	       DECODE(d4.fourthSellQuantity,NULL,NULL,0,0,DECODE(d3.beforeSellQuantity,NULL,NULL,(d3.beforeSellQuantity-d4.fourthSellQuantity)/d4.fourthSellQuantity))*100 beforeSellQuantityChange,
	               DECODE(d4.fourthSellTotalPrice,NULL,NULL,0,0,DECODE(d3.beforeSellTotalPrice,NULL,NULL,(d3.beforeSellTotalPrice-d4.fourthSellTotalPrice)/d4.fourthSellTotalPrice))*100 beforeSellTotalPriceChange,
		           DECODE(d4.fourthSellProfit,NULL,NULL,0,0,DECODE(d3.beforeSellProfit,NULL,NULL,(d3.beforeSellProfit-d4.fourthSellProfit)/d4.fourthSellProfit))*100 beforeSellProfitChange,
		           
		           <!--第四年-->
		           d4.fourthSellMonth,
		           d4.fourthSellQuantity,
		           d4.fourthSellTotalPrice,
		           d4.fourthSellProfit,
		           
		           DECODE(d5.fifthSellQuantity,NULL,NULL,0,0,DECODE(d4.fourthSellQuantity,NULL,NULL,(d4.fourthSellQuantity-d5.fifthSellQuantity)/d5.fifthSellQuantity))*100 fourthSellQuantityChange,
		           DECODE(d5.fifthSellTotalPrice,NULL,NULL,0,0,DECODE(d4.fourthSellTotalPrice,NULL,NULL,(d4.fourthSellTotalPrice-d5.fifthSellTotalPrice)/d5.fifthSellTotalPrice))*100 fourthSellTotalPriceChange,
		           DECODE(d5.fifthSellProfit,NULL,NULL,0,0,DECODE(d4.fourthSellProfit,NULL,NULL,(d4.fourthSellProfit-d5.fifthSellProfit)/d5.fifthSellProfit))*100 fourthSellProfitChange,
	       	       
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellQuantity/d5.fifthSellStoreQuantity) fifthPsdSellQuantity,
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellTotalPrice/d5.fifthSellStoreQuantity) fifthPsdSellTotalPrice,
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellProfit/d5.fifthSellStoreQuantity) fifthPsdSellProfit
	       	    </if>
	       	   FROM 
	       	   (<foreach collection="list" item="item" index="index" separator="UNION ALL" > 
			       	    SELECT 
						       ${item} sellMonth
						 FROM  
						 	 DUAL
					   </foreach>  
				  ) k1
			  LEFT JOIN
			  
	       	    (SELECT 
				       t1.sell_month sellMonth,
				       <!-- SUM(t1.sell_quantity) sellQuantity, -->
				        <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) sellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) sellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) sellQuantity,
					   </if>
				       SUM(t1.sell_total_price) sellTotalPrice,
				       SUM(t1.sell_profit) sellProfit,
				       <!-- SUM(t1.psd_sell_quantity) psdSellQuantity,
				       SUM(t1.psd_sell_total_price) psdSellTotalPrice,
				       SUM(t1.psd_sell_profit) psdSellProfit -->
				       SUM(t1.sell_store_quantity) sellStoreQuantity <!--销售店天数-->
				 FROM  
				 	   <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		   INNER JOIN   merchandise t2
	       	       ON  t1.merchandise_code=t2.merchandise_code
	              AND  t1.supplier_code=t2.supplier_code 	
	            WHERE  1=1	  
	              AND  t2.detail_type_code IN 
						 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1 
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					     )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				  <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
				  AND   t1.sell_month &gt;=#{startDate}
				  AND   t1.sell_month &lt;=#{endDate}
			 GROUP BY   t1.sell_month) d1
			       ON   k1.sellMonth=d1.sellMonth
		   
		    <!-- 默认查看去年的 -->
			LEFT JOIN
			  	(SELECT 
				       t1.sell_month lastSellMonth,
				      <!--  SUM(t1.sell_quantity) lastSellQuantity, -->
				       <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) lastSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) lastSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) lastSellQuantity,
					   </if>		
				       SUM(t1.sell_total_price) lastSellTotalPrice,
				       SUM(t1.sell_profit) lastSellProfit,
				       <!-- SUM(t1.psd_sell_quantity) lastPsdSellQuantity,
				       SUM(t1.psd_sell_total_price) lastPsdSellTotalPrice,
				       SUM(t1.psd_sell_profit) lastPsdSellProfit -->
				       SUM(t1.sell_store_quantity) lastSellStoreQuantity <!--销售店天数-->
				 FROM  
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
			INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	  
	               AND  t2.detail_type_code IN 
					    (SELECT DISTINCT detail_type_code FROM  merchandise 
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					     )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				 <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
				  AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-1),SUBSTR(#{startDate},5))
				  AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-1),SUBSTR(#{endDate},5))
			 GROUP BY  t1.sell_month) d2
			       ON  SUBSTR(k1.sellMonth,5)= SUBSTR(d2.lastSellMonth,5)
			  
			<!--查第三年的用于计算第二年的同比--> 
			  LEFT JOIN
			  	(SELECT 
				        t1.sell_month beforeSellMonth,
				       <!-- SUM(t1.sell_quantity) beforeSellQuantity, -->
				        <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) beforeSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) beforeSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) beforeSellQuantity,
					   </if>	
				       SUM(t1.sell_total_price) beforeSellTotalPrice,
				       SUM(t1.sell_profit) beforeSellProfit,
				      <!--  SUM(t1.psd_sell_quantity) beforePsdSellQuantity,
				       SUM(t1.psd_sell_total_price) beforePsdSellTotalPrice,
				       SUM(t1.psd_sell_profit) beforePsdSellProfit -->
				       SUM(t1.sell_store_quantity) beforeSellStoreQuantity <!--销售店天数-->
				 FROM  
				 	   <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		   INNER JOIN  merchandise t2
	       	       ON  t1.merchandise_code=t2.merchandise_code
	              AND  t1.supplier_code=t2.supplier_code 	
	            WHERE  1=1	  
	              AND  t2.detail_type_code IN 
				 		(SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					     )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				  <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
				  AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-2),SUBSTR(#{startDate},5))
				  AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-2),SUBSTR(#{endDate},5))
			 GROUP BY  t1.sell_month) d3
			  	   ON  SUBSTR(k1.sellMonth,5)=SUBSTR(d3.beforeSellMonth,5)
			
			<!-- 查第四年的用于计算第三年的同比-->
			<if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
			  LEFT JOIN
		        (SELECT 
		             t1.sell_month fourthSellMonth,
		             <!-- SUM(t1.sell_quantity) fourthSellQuantity, -->
		             <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				     <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
					 </if>
					 <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
				     </if>
				     <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fourthSellQuantity,
					 </if>	
		             SUM(t1.sell_total_price) fourthSellTotalPrice,
		             SUM(t1.sell_profit) fourthSellProfit,
		             <!-- SUM(t1.psd_sell_quantity) fourthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fourthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fourthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fourthSellStoreQuantity <!--销售店天数-->
		       FROM  
		             <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	  
	               AND  t2.detail_type_code IN 
		       		 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					  )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		        <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
		          AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-3),SUBSTR(#{startDate},5))
				  AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-3),SUBSTR(#{endDate},5))
		     GROUP BY  t1.sell_month) d4
		      	   ON  SUBSTR(k1.sellMonth,5)=SUBSTR(d4.fourthSellMonth,5)
			</if>
			<!-- 查第五年的用于计算第四年的同比-->
			<if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
			  LEFT JOIN
		        (SELECT 
		             t1.sell_month fourthSellMonth,
		             <!-- SUM(t1.sell_quantity) fourthSellQuantity, -->
		              <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fourthSellQuantity,
					   </if>	
		             SUM(t1.sell_total_price) fourthSellTotalPrice,
		             SUM(t1.sell_profit) fourthSellProfit,
		             <!-- SUM(t1.psd_sell_quantity) fourthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fourthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fourthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fourthSellStoreQuantity <!--销售店天数-->
		       FROM  
		             <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	
	               AND  t2.detail_type_code IN   
		       		 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					  )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		        <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
		        AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-3),SUBSTR(#{startDate},5))
				AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-3),SUBSTR(#{endDate},5))
		   GROUP BY  t1.sell_month) d4
		         ON  SUBSTR(k1.sellMonth,5)=SUBSTR(d4.fourthSellMonth,5)
		      
		       LEFT JOIN
		        (SELECT 
		                t1.sell_month fifthSellMonth,
		            <!-- SUM(t1.sell_quantity) fifthSellQuantity, -->
		              <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fifthSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fifthSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fifthSellQuantity,
					   </if>
		             SUM(t1.sell_total_price) fifthSellTotalPrice,
		             SUM(t1.sell_profit) fifthSellProfit,
		             <!-- SUM(t1.psd_sell_quantity) fifthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fifthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fifthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fifthSellStoreQuantity <!--销售店天数-->
		       FROM  
		             <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	
	               AND  t2.detail_type_code IN   
		       		 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					  )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		        <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
		       AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-4),SUBSTR(#{startDate},5))
			   AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-4),SUBSTR(#{endDate},5))
		  GROUP BY  t1.sell_month) d5
		        ON  SUBSTR(k1.sellMonth,5)=SUBSTR(d5.fifthSellMonth,5)
			</if>
			 ORDER BY  k1.sellMonth
		 )
	     </select>
	     
	     
	     <!--查询单品销售总计-->
	      <select id="queryDetailSellSum" resultMap="detailAnalysisMap">
	     	SELECT
		     <!--第一年-->
		     '总计' sellMonth,
		     ROUND(sellQuantity,2) sellQuantity,
	     	 ROUND(sellTotalPrice,2) sellTotalPrice,
	     	 ROUND(sellProfit,2) sellProfit,
		     
		     ROUND(sellQuantityChange,2) sellQuantityChange,
		     ROUND(sellTotalPriceChange,2) sellTotalPriceChange,
		     ROUND(sellProfitChange,2) sellProfitChange,
		     
		     ROUND(psdSellQuantity,2) psdSellQuantity,
		     ROUND(psdSellTotalPrice,2) psdSellTotalPrice,
		     ROUND(psdSellProfit,2) psdSellProfit,
		     
		     ROUND(DECODE(lastPsdSellQuantity,NULL,NULL,0,0,DECODE(psdSellQuantity,NULL,NULL,(psdSellQuantity-lastPsdSellQuantity)/lastPsdSellQuantity))*100,2) psdSellQuantityChange,
		     ROUND(DECODE(lastPsdSellTotalPrice,NULL,NULL,0,0,DECODE(psdSellTotalPrice,NULL,NULL,(psdSellTotalPrice-lastPsdSellTotalPrice)/lastPsdSellTotalPrice))*100,2) psdSellTotalPriceChange,
		     ROUND(DECODE(lastPsdSellProfit,NULL,NULL,0,0,DECODE(psdSellProfit,NULL,NULL,(psdSellProfit-lastPsdSellProfit)/lastPsdSellProfit))*100,2) psdSellProfitChange,
		     
		     <!--第二年-->
		     lastSellMonth,
		     ROUND(lastSellQuantity,2) lastSellQuantity,
	     	 ROUND(lastSellTotalPrice,2) lastSellTotalPrice,
	     	 ROUND(lastSellProfit,2) lastSellProfit,
		     
		     ROUND(lastSellQuantityChange,2) lastSellQuantityChange,
		     ROUND(lastSellTotalPriceChange,2) lastSellTotalPriceChange,
		     ROUND(lastSellProfitChange,2) lastSellProfitChange,
		     
		     ROUND(lastPsdSellQuantity,2) lastPsdSellQuantity,
		     ROUND(lastPsdSellTotalPrice,2) lastPsdSellTotalPrice,
		     ROUND(lastPsdSellProfit,2) lastPsdSellProfit,
		     
		     ROUND(DECODE(beforePsdSellQuantity,NULL,NULL,0,0,DECODE(lastPsdSellQuantity,NULL,NULL,(lastPsdSellQuantity-beforePsdSellQuantity)/beforePsdSellQuantity))*100,2) lastPsdSellQuantityChange,
		     ROUND(DECODE(beforePsdSellTotalPrice,NULL,NULL,0,0,DECODE(lastPsdSellTotalPrice,NULL,NULL,(lastPsdSellTotalPrice-beforePsdSellTotalPrice)/beforePsdSellTotalPrice))*100,2) lastPsdSellTotalPriceChange,
		     ROUND(DECODE(beforePsdSellProfit,NULL,NULL,0,0,DECODE(lastPsdSellProfit,NULL,NULL,(lastPsdSellProfit-beforePsdSellProfit)/beforePsdSellProfit))*100,2) lastPsdSellProfitChange
		     
		     <if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
	    	 ,
	    	 <!--第三年-->
	    	 beforeSellMonth,
	       	 ROUND(beforeSellQuantity,2) beforeSellQuantity,
	       	 ROUND(beforeSellTotalPrice,2) beforeSellTotalPrice,
	       	 ROUND(beforeSellProfit,2) beforeSellProfit,
	    	 
	    	 ROUND(beforeSellQuantityChange,2) beforeSellQuantityChange,
	    	 ROUND(beforeSellTotalPriceChange,2) beforeSellTotalPriceChange,
		     ROUND(beforeSellProfitChange,2) beforeSellProfitChange,
		     
		     ROUND(beforePsdSellQuantity,2) beforePsdSellQuantity,
		     ROUND(beforePsdSellTotalPrice,2) beforePsdSellTotalPrice,
		     ROUND(beforePsdSellProfit,2) beforePsdSellProfit,
		     
		     ROUND(DECODE(fourthPsdSellQuantity,NULL,NULL,0,0,DECODE(beforePsdSellQuantity,NULL,NULL,(beforePsdSellQuantity-fourthPsdSellQuantity)/fourthPsdSellQuantity))*100,2) beforePsdSellQuantityChange,
		     ROUND(DECODE(fourthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(beforePsdSellTotalPrice,NULL,NULL,(beforePsdSellTotalPrice-fourthPsdSellTotalPrice)/fourthPsdSellTotalPrice))*100,2) beforePsdSellTotalPriceChange,
		     ROUND(DECODE(fourthPsdSellProfit,NULL,NULL,0,0,DECODE(beforePsdSellProfit,NULL,NULL,(beforePsdSellProfit-fourthPsdSellProfit)/fourthPsdSellProfit))*100,2) beforePsdSellProfitChange
		     </if>
		     <if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
		     ,
		     <!--第三年-->
		     beforeSellMonth,
	       	 ROUND(beforeSellQuantity,2) beforeSellQuantity,
	       	 ROUND(beforeSellTotalPrice,2) beforeSellTotalPrice,
	       	 ROUND(beforeSellProfit,2) beforeSellProfit,
		     
		     ROUND(beforeSellQuantityChange,2) beforeSellQuantityChange,
	    	 ROUND(beforeSellTotalPriceChange,2) beforeSellTotalPriceChange,
		     ROUND(beforeSellProfitChange,2) beforeSellProfitChange,
		     
		     ROUND(beforePsdSellQuantity,2) beforePsdSellQuantity,
		     ROUND(beforePsdSellTotalPrice,2) beforePsdSellTotalPrice,
		     ROUND(beforePsdSellProfit,2) beforePsdSellProfit,
		     
		     ROUND(DECODE(fourthPsdSellQuantity,NULL,NULL,0,0,DECODE(beforePsdSellQuantity,NULL,NULL,(beforePsdSellQuantity-fourthPsdSellQuantity)/fourthPsdSellQuantity))*100,2) beforePsdSellQuantityChange,
		     ROUND(DECODE(fourthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(beforePsdSellTotalPrice,NULL,NULL,(beforePsdSellTotalPrice-fourthPsdSellTotalPrice)/fourthPsdSellTotalPrice))*100,2) beforePsdSellTotalPriceChange,
		     ROUND(DECODE(fourthPsdSellProfit,NULL,NULL,0,0,DECODE(beforePsdSellProfit,NULL,NULL,(beforePsdSellProfit-fourthPsdSellProfit)/fourthPsdSellProfit))*100,2) beforePsdSellProfitChange,
		     
		     <!--第四年-->
		     fourthSellMonth,
		     ROUND(fourthSellQuantity,2) fourthSellQuantity,
		     ROUND(fourthSellTotalPrice,2) fourthSellTotalPrice,
		     ROUND(fourthSellProfit,2) fourthSellProfit,
		     
		     ROUND(fourthSellQuantityChange,2) fourthSellQuantityChange,
		     ROUND(fourthSellTotalPriceChange,2) fourthSellTotalPriceChange,
		     ROUND(fourthSellProfitChange,2) fourthSellProfitChange,
		     
		     ROUND(fourthPsdSellQuantity,2) fourthPsdSellQuantity,
		     ROUND(fourthPsdSellTotalPrice,2) fourthPsdSellTotalPrice,
		     ROUND(fourthPsdSellProfit,2) fourthPsdSellProfit,
		     
		     ROUND(DECODE(fifthPsdSellQuantity,NULL,NULL,0,0,DECODE(fourthPsdSellQuantity,NULL,NULL,(fourthPsdSellQuantity-fifthPsdSellQuantity)/fifthPsdSellQuantity))*100,2) fourthPsdSellQuantityChange,
		     ROUND(DECODE(fifthPsdSellTotalPrice,NULL,NULL,0,0,DECODE(fourthPsdSellTotalPrice,NULL,NULL,(fourthPsdSellTotalPrice-fifthPsdSellTotalPrice)/fifthPsdSellTotalPrice))*100,2) fourthPsdSellTotalPriceChange,
		     ROUND(DECODE(fifthPsdSellProfit,NULL,NULL,0,0,DECODE(fourthPsdSellProfit,NULL,NULL,(fourthPsdSellProfit-fifthPsdSellProfit)/fifthPsdSellProfit))*100,2) fourthPsdSellProfitChange     
		     </if>
	     FROM
	     (	
	     	SELECT  
	     		   sellMonth,
	       	       d1.sellQuantity,
	     		   d1.sellTotalPrice,
	     		   d1.sellProfit,
	     		   
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellQuantity/d1.sellStoreQuantity) psdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellTotalPrice/d1.sellStoreQuantity) psdSellTotalPrice,
	     		   DECODE(d1.sellStoreQuantity,NULL,NULL,0,0,d1.sellProfit/d1.sellStoreQuantity) psdSellProfit,
	     		   
	     		   DECODE(d2.lastSellQuantity,NULL,NULL,0,0,DECODE(d1.sellQuantity,NULL,NULL,(d1.sellQuantity-d2.lastSellQuantity)/d2.lastSellQuantity))*100 sellQuantityChange,
		           DECODE(d2.lastSellTotalPrice,NULL,NULL,0,0,DECODE(d1.sellTotalPrice,NULL,NULL,(d1.sellTotalPrice-d2.lastSellTotalPrice)/d2.lastSellTotalPrice))*100 sellTotalPriceChange,
		           DECODE(d2.lastSellProfit,NULL,NULL,0,0,DECODE(d1.sellProfit,NULL,NULL,(d1.sellProfit-d2.lastSellProfit)/d2.lastSellProfit))*100 sellProfitChange,
		           
		           <!--第二年-->
		           d2.lastSellMonth,
		           d2.lastSellQuantity,
	     		   d2.lastSellTotalPrice,
	     		   d2.lastSellProfit,
	     		   
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellQuantity/d2.lastSellStoreQuantity) lastPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellTotalPrice/d2.lastSellStoreQuantity) lastPsdSellTotalPrice,
	     		   DECODE(d2.lastSellStoreQuantity,NULL,NULL,0,0,d2.lastSellProfit/d2.lastSellStoreQuantity) lastPsdSellProfit,
	     		   
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellQuantity/d3.beforeSellStoreQuantity) beforePsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellTotalPrice/d3.beforeSellStoreQuantity) beforePsdSellTotalPrice,
	     		   DECODE(d3.beforeSellStoreQuantity,NULL,NULL,0,0,d3.beforeSellProfit/d3.beforeSellStoreQuantity) beforePsdSellProfit,
	     		   
	     		   DECODE(d3.beforeSellQuantity,NULL,NULL,0,0,DECODE(d2.lastSellQuantity,NULL,NULL,(d2.lastSellQuantity-d3.beforeSellQuantity)/d3.beforeSellQuantity))*100 lastSellQuantityChange,
	               DECODE(d3.beforeSellTotalPrice,NULL,NULL,0,0,DECODE(d2.lastSellTotalPrice,NULL,NULL,(d2.lastSellTotalPrice-d3.beforeSellTotalPrice)/d3.beforeSellTotalPrice))*100 lastSellTotalPriceChange,
		           DECODE(d3.beforeSellProfit,NULL,NULL,0,0,DECODE(d2.lastSellProfit,NULL,NULL,(d2.lastSellProfit-d3.beforeSellProfit)/d3.beforeSellProfit))*100 lastSellProfitChange
	       	    <if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
	       	       <!--第三年-->
	       	       ,
	       	       d3.beforeSellMonth,
	       	       d3.beforeSellQuantity,
	       	       d3.beforeSellTotalPrice,
	       	       d3.beforeSellProfit,
	       	       
	       	       DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellQuantity/d4.fourthSellStoreQuantity) fourthPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellTotalPrice/d4.fourthSellStoreQuantity) fourthPsdSellTotalPrice,
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellProfit/d4.fourthSellStoreQuantity) fourthPsdSellProfit,
	       	       
	       	       DECODE(d4.fourthSellQuantity,NULL,NULL,0,0,DECODE(d3.beforeSellQuantity,NULL,NULL,(d3.beforeSellQuantity-d4.fourthSellQuantity)/d4.fourthSellQuantity))*100 beforeSellQuantityChange,
	               DECODE(d4.fourthSellTotalPrice,NULL,NULL,0,0,DECODE(d3.beforeSellTotalPrice,NULL,NULL,(d3.beforeSellTotalPrice-d4.fourthSellTotalPrice)/d4.fourthSellTotalPrice))*100 beforeSellTotalPriceChange,
		           DECODE(d4.fourthSellProfit,NULL,NULL,0,0,DECODE(d3.beforeSellProfit,NULL,NULL,(d3.beforeSellProfit-d4.fourthSellProfit)/d4.fourthSellProfit))*100 beforeSellProfitChange
	       	    </if>
	       	     <if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
	       	       ,
	               d3.beforeSellMonth,
	       	       d3.beforeSellQuantity,
	       	       d3.beforeSellTotalPrice,
	       	       d3.beforeSellProfit,
	       	       
	       	       DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellQuantity/d4.fourthSellStoreQuantity) fourthPsdSellQuantity,<!--PSD销售量=销售量/销售店天-->
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellTotalPrice/d4.fourthSellStoreQuantity) fourthPsdSellTotalPrice,
	     		   DECODE(d4.fourthSellStoreQuantity,NULL,NULL,0,0,d4.fourthSellProfit/d4.fourthSellStoreQuantity) fourthPsdSellProfit,
	       	       
	       	       DECODE(d4.fourthSellQuantity,NULL,NULL,0,0,DECODE(d3.beforeSellQuantity,NULL,NULL,(d3.beforeSellQuantity-d4.fourthSellQuantity)/d4.fourthSellQuantity))*100 beforeSellQuantityChange,
	               DECODE(d4.fourthSellTotalPrice,NULL,NULL,0,0,DECODE(d3.beforeSellTotalPrice,NULL,NULL,(d3.beforeSellTotalPrice-d4.fourthSellTotalPrice)/d4.fourthSellTotalPrice))*100 beforeSellTotalPriceChange,
		           DECODE(d4.fourthSellProfit,NULL,NULL,0,0,DECODE(d3.beforeSellProfit,NULL,NULL,(d3.beforeSellProfit-d4.fourthSellProfit)/d4.fourthSellProfit))*100 beforeSellProfitChange,
		           
		           <!--第四年-->
		           d4.fourthSellMonth,
		           d4.fourthSellQuantity,
		           d4.fourthSellTotalPrice,
		           d4.fourthSellProfit,
		           
		           DECODE(d5.fifthSellQuantity,NULL,NULL,0,0,DECODE(d4.fourthSellQuantity,NULL,NULL,(d4.fourthSellQuantity-d5.fifthSellQuantity)/d5.fifthSellQuantity))*100 fourthSellQuantityChange,
		           DECODE(d5.fifthSellTotalPrice,NULL,NULL,0,0,DECODE(d4.fourthSellTotalPrice,NULL,NULL,(d4.fourthSellTotalPrice-d5.fifthSellTotalPrice)/d5.fifthSellTotalPrice))*100 fourthSellTotalPriceChange,
		           DECODE(d5.fifthSellProfit,NULL,NULL,0,0,DECODE(d4.fourthSellProfit,NULL,NULL,(d4.fourthSellProfit-d5.fifthSellProfit)/d5.fifthSellProfit))*100 fourthSellProfitChange,
	       	       
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellQuantity/d5.fifthSellStoreQuantity) fifthPsdSellQuantity,
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellTotalPrice/d5.fifthSellStoreQuantity) fifthPsdSellTotalPrice,
	       	       DECODE(d5.fifthSellStoreQuantity,NULL,NULL,0,0,d5.fifthSellProfit/d5.fifthSellStoreQuantity) fifthPsdSellProfit
	       	    </if>
	       	   FROM 
	       	    (SELECT 
				       SUBSTR(#{startDate},0,4) sellMonth,
				       <!-- SUM(t1.sell_quantity) sellQuantity, -->
				        <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) sellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) sellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) sellQuantity,
					   </if>	
				       SUM(t1.sell_total_price) sellTotalPrice,
				       SUM(t1.sell_profit) sellProfit,
				       <!-- SUM(t1.psd_sell_quantity) psdSellQuantity,
				       SUM(t1.psd_sell_total_price) psdSellTotalPrice,
				       SUM(t1.psd_sell_profit) psdSellProfit -->
				       SUM(t1.sell_store_quantity) sellStoreQuantity <!--销售店天数-->
				 FROM  
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
			INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	
	               AND  t2.detail_type_code IN   
				 	   (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       )
					   )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				  <!--AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ')-->
				  AND  t1.sell_month &gt;=#{startDate}
				  AND  t1.sell_month &lt;=#{endDate}
				) d1
		   
		    <!-- 默认查看去年的 -->
			LEFT JOIN
			  	(SELECT 
				       SUBSTR(#{startDate},0,4)-1 lastSellMonth,
				        <!-- SUM(t1.sell_quantity) lastSellQuantity, -->
				        <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) lastSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) lastSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) lastSellQuantity,
					   </if>	
				       SUM(t1.sell_total_price) lastSellTotalPrice,
				       SUM(t1.sell_profit) lastSellProfit,
				       <!-- SUM(t1.psd_sell_quantity) lastPsdSellQuantity,
				       SUM(t1.psd_sell_total_price) lastPsdSellTotalPrice,
				       SUM(t1.psd_sell_profit) lastPsdSellProfit -->
				       SUM(t1.sell_store_quantity) lastSellStoreQuantity <!--销售店天数-->
				 FROM  
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
			INNER JOIN  merchandise t2
	       	    	ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	  
	               AND  t2.detail_type_code IN 
				 	   (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					    )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				 <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ')-->
				  AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-1),SUBSTR(#{startDate},5))
				  AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-1),SUBSTR(#{endDate},5))
					) d2
			  
			       ON  d1.sellMonth=d2.lastSellMonth+1
			<!--查第三年的用于计算第二年的同比-->  
			  LEFT JOIN
			  	(SELECT 
				       SUBSTR(#{startDate},0,4)-2 beforeSellMonth,
				      <!-- SUM(t1.sell_quantity) beforeSellQuantity, -->
				        <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) beforeSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) beforeSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) beforeSellQuantity,
					   </if>		
				       SUM(t1.sell_total_price) beforeSellTotalPrice,
				       SUM(t1.sell_profit) beforeSellProfit,
				       <!-- SUM(t1.psd_sell_quantity) beforePsdSellQuantity,
				       SUM(t1.psd_sell_total_price) beforePsdSellTotalPrice,
				       SUM(t1.psd_sell_profit) beforePsdSellProfit -->
				       SUM(t1.sell_store_quantity) beforeSellStoreQuantity <!--销售店天数-->
				 FROM  
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
			INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	  
	               AND  t2.detail_type_code IN 
				 		(SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					    )
				  <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
				  <!--AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ')-->
				  AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-2),SUBSTR(#{startDate},5))
				  AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-2),SUBSTR(#{endDate},5))
					) d3
			  
			  	   ON  d1.sellMonth=d3.beforeSellMonth+2
	
			<!-- 查第四年的用于计算第三年的同比-->
			<if test= "seeYear != null and seeYear !='' and seeYear ==2 ">
			  LEFT JOIN
		        (SELECT 
		             SUBSTR(#{startDate},0,4)-3 fourthSellMonth,
		             <!-- SUM(t1.sell_quantity) fourthSellQuantity, -->
		              <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fourthSellQuantity,
					   </if>	
		             SUM(t1.sell_total_price) fourthSellTotalPrice,
		             SUM(t1.sell_profit) fourthSellProfit,
		             <!-- SUM(t1.psd_sell_quantity) fourthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fourthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fourthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fourthSellStoreQuantity <!--销售店天数-->
		       FROM  
		            <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	
	               AND  t2.detail_type_code IN 
		       		  (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					    )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		       <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ')-->
		        AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-3),SUBSTR(#{startDate},5))
				AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-3),SUBSTR(#{endDate},5))
		    	) d4
		      
		         ON  d1.sellMonth=d4.fourthSellMonth+3
			</if>
			<!-- 查第五年的用于计算第四年的同比-->
			<if test= "seeYear != null and seeYear !='' and seeYear ==3 ">
			 LEFT JOIN
		        (SELECT 
		             SUBSTR(#{startDate},0,4)-3 fourthSellMonth,
		             <!-- SUM(t1.sell_quantity) fourthSellQuantity, -->
		              <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fourthSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fourthSellQuantity,
					   </if>	
		             SUM(t1.sell_total_price) fourthSellTotalPrice,
		             SUM(t1.sell_profit) fourthSellProfit,
		             <!-- SUM(t1.psd_sell_quantity) fourthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fourthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fourthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fourthSellStoreQuantity <!--销售店天数-->
		       FROM  
		             <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1	
	               AND  t2.detail_type_code IN  
		       		 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		 supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					 )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		        <!--AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ')-->
		        AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-3),SUBSTR(#{startDate},5))
				AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-3),SUBSTR(#{endDate},5))
		   		) d4
		      
		         ON  d1.sellMonth=d4.fourthSellMonth+3
		      
			  LEFT JOIN
		        (SELECT 
		             SUBSTR(#{startDate},0,4)-4 fifthSellMonth,
		             <!-- SUM(t1.sell_quantity) fifthSellQuantity, -->
		              <!--只有同时查看公斤装和定量装时，才进行单位转换-->
				       <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
						SUM(t1.sell_quantity) fifthSellQuantity,
					   </if>
					   <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
						SUM(t1.sell_quantity) fifthSellQuantity,
				       </if>
				       <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				        SUM(t1.sell_quantity*NVL(t2.net_weight,1)) fifthSellQuantity,
					   </if>	
		             SUM(t1.sell_total_price) fifthSellTotalPrice,
		             SUM(t1.sell_profit) fifthSellProfit,
		             <!--  SUM(t1.psd_sell_quantity) fifthPsdSellQuantity,
		             SUM(t1.psd_sell_total_price) fifthPsdSellTotalPrice,
		             SUM(t1.psd_sell_profit) fifthPsdSellProfit -->
		             SUM(t1.sell_store_quantity) fifthSellStoreQuantity <!--销售店天数-->
		       FROM  
		             <if test= "directJoin != null and directJoin !='' and directJoin =='direct' ">
				 	   merchandise_sell_direct_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='join' ">
				 	   merchandise_sell_join_month t1
				 	  </if>
				 	  <if test= "directJoin != null and directJoin !='' and directJoin =='all' ">
				 	   merchandise_sell_d_j_month t1
				 	  </if>
		    INNER JOIN  merchandise t2
	       	        ON  t1.merchandise_code=t2.merchandise_code
	               AND  t1.supplier_code=t2.supplier_code 	
	             WHERE  1=1
	               AND  t2.detail_type_code IN 	 
		       		 (SELECT DISTINCT detail_type_code FROM  merchandise
						 WHERE 1=1
						 AND 
					       (<foreach collection="codeList"  item="item" index="index" separator="OR">
					       		(merchandise_code = #{item.merchandiseCode}	 
					       AND
					       		 supplier_code = #{item.supplierCode})
					       	</foreach> 	
					       ) 
					  )
		          <if test= "rationed != null and rationed !='' and rationed=='gjz' ">
			   		 AND t2.net_weight =1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='dlz' ">
					 AND t2.net_weight !=1
				  </if>
				  <if test= "rationed != null and rationed !='' and rationed=='gjzAndDlz' ">
				  </if>
				  <if test= "sellRegion != null and sellRegion !='' and sellRegion !='all' ">
				 	   AND  t1.sell_region =#{sellRegion}
				  </if>
		        <!-- AND  t1.direct_join !=DECODE(#{directJoin},'direct','加盟','join','直营',' ') -->
		        AND  t1.sell_month &gt;=CONCAT((SUBSTR(#{startDate},0,4)-4),SUBSTR(#{startDate},5))
				AND  t1.sell_month &lt;=CONCAT((SUBSTR(#{endDate},0,4)-4),SUBSTR(#{endDate},5))
		    	) d5
		      
		         ON  d1.sellMonth=d5.fifthSellMonth+4 
			</if>
		  ORDER BY  d1.sellMonth
	  )
     </select>
    
</mapper>