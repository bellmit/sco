<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.powere2e.sco.interfaces.dao.datamaintenance.purchaserdata.materialrolemaintenance.MaterialBigTypeDao">
	<resultMap type="com.powere2e.sco.model.datamaintenance.purchaserdata.materialrolemaintenance.MaterialBigType" id="materialBigTypeMap">
		<result property="materialBigTypeCode" column="materialBigTypeCode"/>
		<result property="materialBigTypeName" column="materialBigTypeName"/>
		<result property="created" column="created"/>
		<result property="createds" column="createds"/>		
		<result property="createby" column="createby"/>
		<result property="updated" column="updated"/>
		<result property="updateds" column="updateds"/>
		<result property="updateby" column="updateby"/>
		<result property="createUserName" column="createUserName"/>
		<result property="updateUserName" column="updateUserName"/>
		<result property="recordCount" column="record_count" />
    </resultMap>
    <!-- 查询原料大类(可分页)-->
    <select id="searchMaterialBigType" resultMap="materialBigTypeMap">
    	SELECT  
    	<if test="page_count == null">
       		t.material_big_type_code materialBigTypeCode,t.material_big_type_name materialBigTypeName
       		,to_char(t.created,'yyyy-MM-DD') createds,	to_char(t.updated,'yyyy-MM-DD')	updateds
			,(SELECT u.real_name FROM pub_user u WHERE u.user_id = t.createby) createby,
           	(SELECT u.real_name FROM pub_user u WHERE u.user_id = t.updateby) updateby
	   </if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
      		FROM material_big_type t
    	<where>
    		1=1
	    	<if test= "materialBigTypeCode != null and materialBigTypeCode !=''">
			AND t.material_big_type_code = #{materialBigTypeCode}
			</if>
	    	<if test= "materialBigTypeName != null and materialBigTypeName !=''">
			AND UPPER(t.material_big_type_name) = UPPER(#{materialBigTypeName})
			</if>
	    	<if test= "created != null and created!=''">
			AND	convert(varchar,t.created,120) LIKE (#{created})
			</if>
	    	<if test= "createby != null and createby!=''">
			AND UPPER(t.createby) LIKE UPPER('%'||#{createby}||'%')
			</if>
	    	<if test= "updated != null and updated!=''">
			AND	convert(varchar,t.updated,120) LIKE (#{updated})
			</if>
	    	<if test= "updateby != null and updateby!=''">
			AND UPPER(t.updateby) LIKE UPPER('%'||#{updateby}||'%')
			</if>
    	</where>
    	<if test="page_count == null">
    		<if test="app_orderby !=null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby ==null">
    			ORDER BY t.created DESC
    		</if>
    	</if>
    </select>
    
    <!-- 根据主键查询某个原料大类(可分页)-->
    <select id="loadMaterialBigType" resultMap="materialBigTypeMap">
    	SELECT  
    	<if test="page_count == null">
       		t.material_big_type_code materialBigTypeCode,t.material_big_type_name materialBigTypeName
       		,t.created,	t.updated 
		   ,(select u.login_name from pub_user u where u.user_id=t.createby) as createby,
           	(select u.login_name from pub_user u where u.user_id=t.updateby) as updateby
    	</if>
    	<if test="page_count != null">
       		count(1) AS record_count
    	</if>
      		FROM material_big_type t
    	<where>
    		1=1
	    	<if test= "materialBigTypeCode != null and materialBigTypeCode!=''">
				AND  t.MATERIAL_BIG_TYPE_CODE = #{materialBigTypeCode}
			</if>
    	</where>
    	<if test="page_count == null">
    		<if test="app_orderby !=null">
    			ORDER BY ${app_orderby}
    		</if>
    		<if test="app_orderby ==null">
    			ORDER BY t.created DESC
    		</if>
    	</if>
    </select>
    <select id="searchMaterialSmallType" resultType="Integer">
        select count(*) from material_small_type where MATERIAL_BIG_TYPE_CODE=#{materialBigTypeCode}
    </select>
    <!-- 增加原料大类 --> 
	<insert id="saveMaterialBigType" parameterType="hashmap">
		INSERT INTO material_big_type(material_big_type_code,material_big_type_name,created,createby) 
			 VALUES(S_MATERIAL_BIG_TYPE.NEXTVAL,#{materialBigTypeName},sysdate,#{app_create_by})
    </insert>
    <!-- 修改原料大类  -->
    <update id="updateMaterialBigType" parameterType="hashmap">
		UPDATE	
				material_big_type	
		   SET	
		   		material_big_type_name=#{materialBigTypeName},
		   		updated = sysdate,
		   		updateby = #{app_update_by}		   		
		 WHERE	
		 		MATERIAL_BIG_TYPE_CODE=#{materialBigTypeCode}
    </update>
    <!-- 删除原料大类 -->
    <delete id="deleteMaterialBigType" parameterType="hashmap">
        DELETE FROM 
        			material_big_type 
        WHERE 
        			MATERIAL_BIG_TYPE_CODE in 
        			<foreach collection="materialBigTypeCode" close=")" open="(" item="materialBigTypeCode" separator=",">
        			#{materialBigTypeCode}
        			</foreach>
    </delete>
</mapper>